# Copyright 2011 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-fhss_utils
#
# SPDX-License-Identifier: GPL-3.0-or-later

########################################################################
# Include python install macros
########################################################################
include(GrPython)
if(NOT PYTHONINTERP_FOUND)
    return()
endif()

add_subdirectory(bindings)

########################################################################
# Install python sources
########################################################################
GR_PYTHON_INSTALL(
    FILES
    __init__.py
    fft_peak.py
    s_and_h_detector.py
    coarse_dehopper.py
    fine_dehopper.py
    fsk_burst_extractor_hier.py
    burst_tag_debug.py
    sigmf_meta_writer.py DESTINATION ${GR_PYTHON_DIR}/gnuradio/fhss_utils
)

# only install burst_tag_debug if PIL package is found, don't require it
set(has_PIL False)
GR_PYTHON_CHECK_MODULE_RAW("Python PIL" "import PIL" "has_PIL")
if(has_PIL)
  message("-- Found Python PIL package, will install burst_tag_debug")
  GR_PYTHON_INSTALL(
    FILES
    burst_tag_debug.py DESTINATION ${GR_PYTHON_DIR}/fhss_utils
    )
else()
  message("-- Could not find Python PIL, not installing burst_tag_debug")
endif()

########################################################################
# Handle the unit tests
########################################################################
include(GrTest)

set(GR_TEST_TARGET_DEPS gnuradio-fhss_utils)

# Create a package directory that tests can import. It includes everything
# from `python/`.
add_custom_target(
  copy_module_for_tests ALL
  COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}
          ${PROJECT_BINARY_DIR}/test_modules/gnuradio/fhss_utils/
)

GR_ADD_TEST(qa_cf_estimate ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_cf_estimate.py)
GR_ADD_TEST(qa_fft_burst_tagger ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_fft_burst_tagger.py)
GR_ADD_TEST(qa_tagged_burst_to_pdu ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_tagged_burst_to_pdu.py)
GR_ADD_TEST(qa_constants ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_constants.py)
